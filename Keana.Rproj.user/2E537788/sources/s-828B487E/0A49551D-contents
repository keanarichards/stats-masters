# load packages -----------------------------------------------------------

## Package names
packages <- c("here", "tidyverse", "sjPlot", "sjmisc", "lme4", "sjlabelled", "papaja", "robustlmm", "memisc")

## Install packages not yet installed
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
  install.packages(packages[!installed_packages])
}

## Packages loading
invisible(lapply(packages, library, character.only = TRUE))

# load data ---------------------------------------------------------------

source(here("source", "01_models.R"))

# model 1 -----------------------------------------------------------------

## fixed effects

fixed_plot1 <- plot_model(fin_mod1, type = "int", auto.label = F, legend.title ="Race condition") +
  labs(x = "Pitch condition", y = 'Rating of threat') + theme_apa()

## random effects

random_plot1 <- plot_model(fin_mod1,
                   type = "re",
                   grid = T,
                   show.values = T, vline.color = "black")[[2]] + theme_apa()

## assumptions 

asm1 <- plot_model(fin_mod1, type='diag')

## table with final model

final_table1 <- mtable("Final model" = fin_mod4a)

## table with model comparison 

compare_table1 <- xtable(compare(max_model4, fin_mod4, fin_mod4a))

# model 2 -----------------------------------------------------------------

## fixed effects

plot_model(fin_mod21, type = "int", auto.label = F, legend.title ="Race condition") +
  labs(x = "Pitch condition", y = 'Rating of threat') + theme_apa()


## random effects

sjPlot::plot_model(fin_mod2,
                   type = "re",
                   grid = T,
                   show.values = T, vline.color = "black")[[2]] + theme_apa()


## assumptions 

plot_model(fin_mod2, type='diag')


## table with final model


## table with model comparison 



# model 3 -----------------------------------------------------------------

fin_mod3 <- lmer(threat ~ 1 + trustC + (1 + trustC | id) + (1 | voice), data= long)

## fixed effects
## random effects
## assumptions 

plot_model(fin_mod3, type='diag')


## table with final model


## table with model comparison 


# model 4 -----------------------------------------------------------------

fin_mod4 <- lmer(threat ~ 1 + domC + (1 | id) + (1 | voice), data= long)



## fixed effects
## random effects
## assumptions 

plot_model(fin_mod4, type='diag')



## table with final model


## table with model comparison 



# model 5 -----------------------------------------------------------------

fin_mod5 <- lmer(trust ~ 1 + cond_pitch + (1 + cond_pitch | id) + (1 | voice), data= long)


## fixed effects
## random effects
## assumptions 

plot_model(fin_mod5, type='diag')



## table with final model


## table with model comparison 



# model 6 -----------------------------------------------------------------

fin_mod6 <- lmer(dom ~ 1 + cond_pitch + (1 | voice) + (1 | id), data= long)


## fixed effects
## random effects
## assumptions 


plot_model(fin_mod6, type='diag')

## table with final model


## table with model comparison 



# model 7 -----------------------------------------------------------------

fin_mod7 <- lmer(threatpotential ~ 1 + cond_pitch + (1 + cond_pitch | voice) +  (1 | id), data= long)

## fixed effects
## random effects
## assumptions 


plot_model(fin_mod7, type='diag')

## table with final model


## table with model comparison 





theme_set(theme_bw(base_size = 12, base_family = ""))
install.packages("pairwiseComparisons")
## https://ademos.people.uic.edu/Chapter16.html
## use ean

slope_voice <- long %>%
  group_by(cond_race, cond_pitch, voice) %>%
  summarise(mean_threat = mean(threat))

ggplot(data = slope_voice, aes(x = cond_race, y = mean_threat, group = cond_pitch)) +
  facet_grid(~voice) +
  geom_point(aes(colour = cond_pitch)) +
  geom_smooth(method = "lm", se = TRUE, aes(colour = cond_pitch)) +
  xlab("race condition") +
  ylab("threat")


qplot(cond_race, threat,
  facets = cond_pitch ~ voice,
  colour = voice, geom = "boxplot", data = long
)


qplot(cond_race, leadership,
  facets = cond_pitch ~ voice,
  colour = voice, geom = "boxplot", data = long
)



ggplot(data = long, aes(x = cond_race, y = threat, group = voice)) +
  facet_grid(~voice) +
  geom_smooth(method = "lm", se = TRUE, aes(colour = voice)) +
  xlab("condition") +
  ylab("threat") +
  theme(legend.position = "none")
