# load packages -----------------------------------------------------------

## Package names
packages <- c("here", "tidyverse", "sjPlot", "sjmisc", "lme4", "sjlabelled", "papaja", "robustlmm", "memisc")

## Install packages not yet installed
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
  install.packages(packages[!installed_packages])
}

## Packages loading
invisible(lapply(packages, library, character.only = TRUE))

# load data ---------------------------------------------------------------

source(here("source", "01_models.R"))

# model 1 -----------------------------------------------------------------

## fixed effects

fixed_plot1 <- plot_model(fin_mod1, type = "int", auto.label = F, legend.title ="Race condition") +
  labs(x = "Pitch condition", y = 'Rating of threat') + theme_apa()

## random effects

random_plot1 <- plot_model(fin_mod1,
                   type = "re",
                   grid = T,
                   show.values = T, vline.color = "black")[[2]] + theme_apa()


## assumptions 

asm1 <- plot_model(fin_mod1, type='diag')

## table with final model

fin_mod1 %>% tab_model(., file = here("figs", "final_table1.html"))
webshot(here("figs", "final_table1.html"), here("figs", "final_table1.png"), selector = "table", zoom= 2)

## table with model comparison
tab_model(max_model1, fin_mod1, fin_mod1a, file = "compare_table1.html", p.val = "satterthwaite", show.df = T)
webshot(here("compare_table1.html"), here("compare_table1.png"), selector = "table", zoom= 2)

# model 2 -----------------------------------------------------------------

## fixed effects

plot_model(fin_mod2, type = "int", auto.label = F, legend.title ="Race condition") +
  labs(x = "Pitch condition", y = 'Rating of threat') + theme_apa()


## random effects

plot_model(fin_mod2,
                   type = "re",
                   grid = T,
                   show.values = T, vline.color = "black")[[2]] + theme_apa()


## assumptions 

asm2 <- plot_model(fin_mod2, type='diag')


## table with final model


fin_mod2 %>% tab_model(., file = "final_table2.html")
webshot(here("final_table2.html"), here("final_table2.png"), selector = "table", zoom= 2)


## table with model comparison 
tab_model(max_model2, fin_mod2, fin_mod2a, file = "compare_table1.html")
webshot(here("compare_table2.html"), here("compare_table2.png"), selector = "table", zoom= 2)



# model 3 -----------------------------------------------------------------

## random effects

random_plot3 <- plot_model(fin_mod3,
                           type = "re",
                           grid = T,
                           show.values = T, vline.color = "black")[[2]] + theme_apa()
## assumptions 

asm3 <- plot_model(fin_mod3, type='diag')


## table with final model

fin_mod3 %>% tab_model(., file = "final_table3.html")
webshot(here("final_table3.html"), here("final_table3.png"), selector = "table", zoom= 2)

## table with model comparison 

tab_model(max_model3, fin_mod3, fin_mod3a, file = "compare_table1.html")
webshot(here("compare_table3.html"), here("compare_table3.png"), selector = "table", zoom= 2)


# model 4 -----------------------------------------------------------------

## random effects

random_plot4 <- plot_model(fin_mod4,
                           type = "re",
                           grid = T,
                           show.values = T, vline.color = "black")[[2]] + theme_apa()

## assumptions 

asm4 <- plot_model(fin_mod4, type='diag')

## table with final model

fin_mod4 %>% tab_model(., file = "final_table4.html")
webshot(here("final_table4.html"), here("final_table4.png"), selector = "table", zoom= 2)

## table with model comparison 

tab_model(max_model4, fin_mod4, fin_mod4a, file = "compare_table4.html")
webshot(here("compare_table4.html"), here("compare_table4.png"), selector = "table", zoom= 2)


# model 5 -----------------------------------------------------------------


## random effects


## assumptions 

asm5 <- plot_model(fin_mod5, type='diag')


## table with final model

fin_mod5 %>% tab_model(., file = "final_table5.html")
webshot(here("final_table5.html"), here("final_table5.png"), selector = "table", zoom= 2)

## table with model comparison 


tab_model(max_model5, fin_mod15, fin_mod5a, file = "compare_table1.html")
webshot(here("compare_table5.html"), here("compare_table5.png"), selector = "table", zoom= 2)

# model 6 -----------------------------------------------------------------

## random effects


## assumptions 


asm6 <- plot_model(fin_mod6, type='diag')

## table with final model

fin_mod6 %>% tab_model(., file = "final_table6.html")
webshot(here("final_table6.html"), here("final_table6.png"), selector = "table", zoom= 2)

## table with model comparison 

tab_model(max_model6, fin_mod6, fin_mod6a, file = "compare_table1.html")
webshot(here("compare_table6.html"), here("compare_table6.png"), selector = "table", zoom= 2)


# model 7 -----------------------------------------------------------------

## random effects


## assumptions 


asm7 <- plot_model(fin_mod7, type='diag')

## table with final model

fin_mod7 %>% tab_model(., file = "final_table2.html")
webshot(here("final_table7.html"), here("final_table7.png"), selector = "table", zoom= 2)


## table with model comparison 


tab_model(max_model7, fin_mod7, fin_mod7a, file = "compare_table1.html")
webshot(here("compare_table7.html"), here("compare_table7.png"), selector = "table", zoom= 2)



# theme_set(theme_bw(base_size = 12, base_family = ""))
# install.packages("pairwiseComparisons")
# ## https://ademos.people.uic.edu/Chapter16.html
# ## use ean
# 
# slope_voice <- long %>%
#   group_by(cond_race, cond_pitch, voice) %>%
#   summarise(mean_threat = mean(threat))
# 
# ggplot(data = slope_voice, aes(x = cond_race, y = mean_threat, group = cond_pitch)) +
#   facet_grid(~voice) +
#   geom_point(aes(colour = cond_pitch)) +
#   geom_smooth(method = "lm", se = TRUE, aes(colour = cond_pitch)) +
#   xlab("race condition") +
#   ylab("threat")
# 
# 
# qplot(cond_race, threat,
#   facets = cond_pitch ~ voice,
#   colour = voice, geom = "boxplot", data = long
# )
# 
# 
# qplot(cond_race, leadership,
#   facets = cond_pitch ~ voice,
#   colour = voice, geom = "boxplot", data = long
# )
# 
# 
# 
# ggplot(data = long, aes(x = cond_race, y = threat, group = voice)) +
#   facet_grid(~voice) +
#   geom_smooth(method = "lm", se = TRUE, aes(colour = voice)) +
#   xlab("condition") +
#   ylab("threat") +
#   theme(legend.position = "none")
